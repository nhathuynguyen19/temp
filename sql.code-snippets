{
  "SQL Trigger Template": {
    "prefix": "sqltrg",
    "body": [
      "if exists (select * from sys.triggers where name = N'${1:TriggerName}')",
      "begin",
      "    drop trigger ${1:TriggerName};",
      "end",
      "go",
      "",
      "create trigger ${1:TriggerName}",
      "on ${2:TableName}",
      "after ${3:insert, update, delete}",
      "as",
      "begin",
      "    set nocount on;",
      "    ",
      "    begin try",
      "        ${4:-- your logic here}",
      "    end try",
      "    begin catch",
      "        raiserror(N'${5:Lỗi khi thực thi trigger}', 16, 1);",
      "        rollback transaction;",
      "    end catch",
      "end",
      "go"
    ],
    "description": "Template trigger SQL Server chuẩn"
  },
  "SQL Procedure Template": {
    "prefix": "sqlproc",
    "body": [
      "if exists(select * from sys.procedures where name = N'${1:ProcName}')",
      "begin",
      "    drop procedure ${1:ProcName};",
      "end",
      "go",
      "",
      "create procedure ${1:ProcName} (",
      "    ${2:@param1 nvarchar(50)},",
      "    ${3:@param2 int} output",
      ")",
      "as",
      "begin",
      "    set nocount on;",
      "    ",
      "    begin try",
      "        begin transaction;",
      "            ${4:-- your logic here}",
      "        commit;",
      "    end try",
      "    begin catch",
      "        if @@TRANCOUNT > 0 rollback transaction;",
      "        raiserror(N'${5:Lỗi khi thực thi procedure}', 16, 1);",
      "    end catch",
      "    return;",
      "end",
      "go"
    ],
    "description": "Template stored procedure SQL Server chuẩn"
  },
  "SQL Function Template": {
    "prefix": "sqlfunc",
    "body": [
      "if exists(select * from sys.objects where name = N'${1:FuncName}')",
      "begin",
      "    drop function ${1:FuncName};",
      "end",
      "go",
      "",
      "create function ${1:FuncName} (",
      "    ${2:@param1 nvarchar(50)}",
      ")",
      "returns table",
      "as",
      "return (",
      "    ${3:-- your query here}",
      ")",
      "go"
    ],
    "description": "Template function SQL Server chuẩn"
  },
  "SQL Scalar Function Template": {
    "prefix": "sqlfuncvar",
    "body": [
      "if exists(select * from sys.objects where name = N'${1:FuncName}' and type = 'FN')",
      "begin",
      "    drop function ${1:FuncName};",
      "end",
      "go",
      "",
      "create function ${1:FuncName} (",
      "    ${2:@param1 nvarchar(50)}",
      ")",
      "returns ${3:int}",
      "as",
      "begin",
      "    declare @result ${3:int};",
      "    ",
      "    -- logic tính toán, gán giá trị cho @result",
      "    set @result = ${4:0};",
      "    ",
      "    return @result;",
      "end",
      "go"
    ],
    "description": "Template function SQL Server trả về biến scalar"
  },
  "SQL Table-Valued Function Template (Định nghĩa bảng trả về)": {
    "prefix": "sqlfunctabledef",
    "body": [
      "if exists(select * from sys.objects where name = N'${1:FuncName}' and type = 'TF')",
      "begin",
      "    drop function ${1:FuncName};",
      "end",
      "go",
      "",
      "create function ${1:FuncName} (",
      "    ${2:@param1 nvarchar(50)}",
      ")",
      "returns @Result table (",
      "    ${3:Col1} ${4:int},",
      "    ${5:Col2} ${6:nvarchar(100)},",
      "    ${7:Col3} ${8:datetime}",
      ")",
      "as",
      "begin",
      "    -- insert dữ liệu vào bảng @Result",
      "    insert into @Result",
      "    select ${9:Col1}, ${10:Col2}, ${11:Col3}",
      "    from ${12:YourTable}",
      "    where ${13:Condition}",
      "",
      "    return;",
      "end",
      "go"
    ],
    "description": "Template function SQL trả về bảng có định nghĩa cấu trúc cột rõ ràng"
  }
}
